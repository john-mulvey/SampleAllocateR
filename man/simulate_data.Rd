% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/batch_allocatoR_refactored.R
\name{simulate_data}
\alias{simulate_data}
\title{Simulate Data with Optional Blocking}
\usage{
simulate_data(n_samples, block_size = NA, seed = 123)
}
\arguments{
\item{n_samples}{Integer; the number of samples to generate. If \code{block_size} is specified and \code{n_samples} is not a multiple of \code{block_size}, the function will generate additional samples to ensure all blocks are complete.}

\item{block_size}{Integer; the size of each block for blocking variable creation. If \code{NA} (the default), no blocking is applied. If specified, \code{block_size} must be a positive integer, and the function will create a blocking variable to group samples into blocks of this size.}

\item{seed}{Integer; the seed for random number generation to ensure reproducibility.}
}
\value{
A \code{data.frame} with columns for sample ID, three covariates (\code{covariate1}, \code{covariate2}, \code{covariate3}), and, if \code{block_size} is specified, a \code{block_id} column. The first two covariates are generated from uniform and normal distributions, respectively, while the third is a categorical variable with levels "A", "B", and "C". If blocking is applied, a \code{block_id} column indicates the block to which each sample belongs.
}
\description{
This function generates a simulated dataset containing a specified number of samples. Users can optionally specify block sizes to group samples into blocks. If the total number of samples is not a multiple of the block size, additional samples are generated to complete the last block.
}
\details{
The function allows for the simulation of data with or without blocking. When \code{block_size} is provided, it ensures that the data is divided into blocks of the specified size, potentially increasing the total number of samples to meet this requirement. This is particularly useful for simulations or analyses where the concept of blocks is relevant.
}
\examples{
# Generate a dataset without blocking
simulate_data(n_samples = 100)

# Generate a dataset with blocking, block size of 10
simulate_data(n_samples = 95, block_size = 10)

}
